version: 2
jobs:
  build:
    docker:
      - 
        image: "circleci/openjdk:8-jdk-browsers"

    working_directory: ~/spring-boot-maven
    
    steps:
      # git pull
      - checkout

      # setup testing env
      - setup_remote_docker
      
      - restore_cache: 
          key: "spring-boot-maven-{{ checksum \"pom.xml\" }}"
          
      - run: "mvn dependency:go-offline"
      
      - save_cache: 
          key: "circleci-demo-java-spring-{{ checksum \"pom.xml\" }}"
          paths: 
            - ~/.m2
            
      - run: "mvn package"
        
      - store_artifacts: 
          path: target/spring-boot-maven-1.0.0-SNAPSHOT.jar
              
      - run:
          name: Echo circleci value
          command: |
            echo $CIRCLE_SHA1 | cut -c -7
            echo $CIRCLE_BUILD_NUM            
     
      - run: 
          name: Remove SNAPSHOT and execute image version number
          command: "if mvn -q -Dexec.executable=\"echo\" -Dexec.args='${project.version}' --non-recursive exec:exec | grep -q \"SNAPSHOT\"; then mvn versions:set -DremoveSnapshot; fi;\n\
              echo $(mvn -q -Dexec.executable=\"echo\" -Dexec.args='${project.version}' --non-recursive exec:exec)-$(echo $CIRCLE_SHA1 | cut -c -7)-$CIRCLE_BUILD_NUM > tempvers.txt\n\
              mvn versions:set -DnewVersion=$(cat tempvers.txt) \n"
                      
      - run:
          name: Login to DockerHub
          command: |
            echo "testing!!!"
            cp target/*.jar docker/app/
            echo $DOCKER_USERNAME $DOCKER_PASSWORD
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          
      - run:
          name: Echo docker path
          command: |
            echo $DOCKER_USERNAME/$CIRCLE_PROJECT_REPONAME:$(cat tempvers.txt) 
            
      - run:
          name: Build Docker Image
          command: |
            docker build --no-cache -t $DOCKER_USERNAME/$CIRCLE_PROJECT_REPONAME:$(cat tempvers.txt) -f docker/Dockerfile .

      - run:
          name: Push Image to DockerHub
          command: docker push $DOCKER_USERNAME/$CIRCLE_PROJECT_REPONAME:$(cat tempvers.txt)
          
      - deploy:
          name: Trigger docs deployment
          working_directory: ~/spring-boot-maven-jarrepo
          command: | 
            git init
            ls -al
            git status
            git config credential.helper 'cache --timeout=120'
            git config user.email "susu.hlaing@wavemoney.com.mm"
            git config user.name "susuhlaing-dmm"   
            cp /home/circleci/spring-boot-maven/target/spring-boot-maven-1.0.0-SNAPSHOT.jar /home/circleci/spring-boot-maven-jarrepo/           
            git add -f .
            git commit -m "pushing jar file"
            git remote add origin https://github.com/susuhlaing-dmm/spring-boot-maven-jarrepo.git
            git push -u origin master